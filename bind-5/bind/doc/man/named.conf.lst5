


NAMED.CONF(5)             FreeBSD File Formats Manual            NAMED.CONF(5)

NNAAMMEE
     nnaammeedd..ccoonnff - configuration file for named(8)


OOVVEERRVVIIEEWW
     BIND 8 is much more configurable than previous release of BIND.  There
     are entirely new areas of configuration, such as access control lists and
     categorized logging.  Many options that previously applied to all zones
     can now be used selectively.  These features, plus a consideration of fu-
     ture configuration needs led to the creation of a new configuration file
     format.


   GGeenneerraall SSyynnttaaxx

     A BIND 8 configuration consists of two general features, statements and
     comments.  All statements end with a semicolon.  Many statements can con-
     tain substatements, which are each also terminated with a semicolon.


     The following statements are supported:

     llooggggiinngg
       specifies what the server logs, and where the log messages are sent


     ooppttiioonnss
       controls global server configuration options and sets defaults for oth-
       er statements


     zzoonnee
       defines a zone


     aaccll
       defines a named IP address matching list, for access control and other
       uses


     kkeeyy
       specifies key information for use in authentication and authorization


     ttrruusstteedd--kkeeyyss
       defines DNSSEC keys that are preconfigured into the server and implic-
       itly trusted


     sseerrvveerr
       sets certain configuration options for individual remote servers


     ccoonnttrroollss
       declares control channels to be used by the nnddcc utility


     iinncclluuddee
       includes another file


     The llooggggiinngg and ooppttiioonnss statements may only occur once per configuration,
     while the rest may appear numerous times.  Further detail on each state-
     ment is provided in individual sections below.

     Comments may appear anywhere that whitespace may appear in a BIND config-
     uration file.  To appeal to programmers of all kinds, they can be written
     in C, C++, or shell/perl constructs.

     C-style comments start with the two characters /* (slash, star) and end
     with */ (star, slash).  Because they are completely delimited with these
     characters, they can be used to comment only a portion of a line or to
     span multiple lines.

     C-style comments cannot be nested.  For example, the following is not
     valid because the entire comment ends with the first */:


           /* This is the start of a comment.
              This is still part of the comment.
           /* This is an incorrect attempt at nesting a comment. */
              This is no longer in any comment. */

     C++-style comments start with the two characters // (slash, slash) and
     continue to the end of the physical line.  They cannot be continued
     across multiple physical lines; to have one logical comment span multiple
     lines, each line must use the // pair.  For example:


           // This is the start of a comment.  The next line
           // is a new comment, even though it is logically
           // part of the previous comment.

     Shell-style (or perl-style, if you prefer) comments start with the char-
     acter # (hash or pound or number or octothorpe or whatever) and continue
     to the end of the physical line, like C++ comments.  For example:


           # This is the start of a comment.  The next line
           # is a new comment, even though it is logically
           # part of the previous comment.

     _W_A_R_N_I_N_G_: you cannot use the ; (semicolon) character to start a comment
     such as you would in a zone file.  The semicolon indicates the end of a
     configuration statement, so whatever follows it will be interpreted as
     the start of the next statement.


   CCoonnvveerrttiinngg ffrroomm BBIINNDD 44..99..xx


     BIND 4.9.x configuration files can be converted to the new format by us-
     ing _s_r_c_/_b_i_n_/_n_a_m_e_d_/_n_a_m_e_d_-_b_o_o_t_c_o_n_f, a shell script that is part of the BIND
     8.2.x source kit.


DDOOCCUUMMEENNTTAATTIIOONN DDEEFFIINNIITTIIOONNSS
     Described below are elements used throughout the BIND configuration file
     documentation.  Elements which are only associated with one statement are
     described only in the section describing that statement.


     _a_c_l___n_a_m_e
       The name of an _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t as defined by the aaccll statement.



     _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t
       A list of one or more _i_p___a_d_d_r, _i_p___p_r_e_f_i_x, _k_e_y___i_d, or _a_c_l___n_a_m_e elements,
       as described in the _A_D_D_R_E_S_S _M_A_T_C_H _L_I_S_T_S section.


     _d_o_t_t_e_d_-_d_e_c_i_m_a_l
       One or more integers valued 0 through 255 separated only by dots
       (``.''), such as 123, 45.67 or 89.123.45.67.


     _d_o_m_a_i_n___n_a_m_e
       A quoted string which will be used as a DNS name, for example
       "my.test.domain".


     _p_a_t_h___n_a_m_e
       A quoted string which will be used as a pathname, such as
       "zones/master/my.test.domain".


     _i_p___a_d_d_r
       An IP address in with exactly four elements in _d_o_t_t_e_d_-_d_e_c_i_m_a_l notation.


     _i_p___p_o_r_t
       An IP port _n_u_m_b_e_r. _n_u_m_b_e_r _i_s _l_i_m_i_t_e_d _t_o 0 through 65535, with values
       below 1024 typically restricted to root-owned processes.  In some cases
       an asterisk (``*'') character can be used as a placeholder to select a
       random high-numbered port.


     _i_p___p_r_e_f_i_x
       An IP network specified in _d_o_t_t_e_d_-_d_e_c_i_m_a_l form, followed by  ``/'' and
       then the number of bits in the netmask.  E.g.  127/8 is the network
       127.0.0.0 with netmask 255.0.0.0. 1.2.3.0/28 is network 1.2.3.0 with
       netmask 255.255.255.240.


     _k_e_y___n_a_m_e
       A string representing the name of a shared key, to be used for transac-
       tion security.


     _n_u_m_b_e_r
       A non-negative integer with an entire range limited by the range of a C
       language signed integer (2,147,483,647 on a machine with 32 bit inte-
       gers).  Its acceptable value might further be limited by the context in
       which it is used.


     _s_i_z_e___s_p_e_c
       A _n_u_m_b_e_r, the word unlimited, or the word default.


       The maximum value of _s_i_z_e___s_p_e_c is that of unsigned long integers on the
       machine.  unlimited requests unlimited use, or the maximum available
       amount.  default uses the limit that was in force when the server was
       started.


       A _n_u_m_b_e_r can optionally be followed by a scaling factor: K or k for
       kilobytes, M or m for megabytes, and G or g for gigabytes, which scale
       by 1024, 1024*1024, and 1024*1024*1024 respectively.



       Integer storage overflow is currently silently ignored during conver-
       sion of scaled values, resulting in values less than intended, possibly
       even negative.  Using unlimited is the best way to safely set a really
       large number.


     _y_e_s___o_r___n_o
       Either yes or no. The words true and false are also accepted, as are
       the numbers 1 and 0.



AADDDDRREESSSS MMAATTCCHH LLIISSTTSS
   SSyynnttaaxx


     _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t    = 1*_a_d_d_r_e_s_s___m_a_t_c_h___e_l_e_m_e_n_t

     _a_d_d_r_e_s_s___m_a_t_c_h___e_l_e_m_e_n_t = [ "!" ] ( _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t /
                                       _i_p___a_d_d_r_e_s_s / _i_p___p_r_e_f_i_x /
                                       _a_c_l___n_a_m_e / "key " _k_e_y___i_d ) ";"


   DDeeffiinniittiioonn aanndd UUssaaggee

     Address match lists are primarily used to determine access control for
     various server operations.  They are also used to define priorities for
     querying other nameservers and to set the addresses on which nnaammeedd will
     listen for queries.  The elements which constitute an address match list
     can be any of the following:


     ++oo   an _i_p_-_a_d_d_r_e_s_s (in _d_o_t_t_e_d_-_d_e_c_i_m_a_l notation,

     ++oo   an _i_p_-_p_r_e_f_i_x (in the '/'-notation),

     ++oo   A _k_e_y___i_d, as defined by the kkeeyy statement,

     ++oo   the name of an address match list previously defined with the aaccll
         statement, or

     ++oo   another _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t.


     Elements can be negated with a leading exclamation mark (``!''), and the
     match list names any, none, localhost and localnets are predefined.  More
     information on those names can be found in the description of the aaccll
     statement.


     The addition of the kkeeyy clause made the name of this syntactic element
     something of a misnomer, since security keys can be used to validate ac-
     cess without regard to a host or network address.  Nonetheless, the term
     ``address match list'' is still used throughout the documentation.


     When a given IP address or prefix is compared to an address match list,
     the list is traversed in order until an element matches.  The interpreta-
     tion of a match depends on whether the list is being used for access con-
     trol, defining lliisstteenn--oonn ports, or as a topology, and whether the element
     was negated.


     When used as an access control list, a non-negated match allows access
     and a negated match denies access.  If there is no match at all in the
     list, access is denied.  The clauses aallllooww--qquueerryy, aallllooww--ttrraannssffeerr, aallllooww--
     uuppddaattee, aallllooww--rreeccuurrssiioonn, and bbllaacckkhhoollee all use address match lists like
     this.  Similarly, the lliisstteenn--oonn option will cause the server to not ac-
     cept queries on any of the machine's addresses which do not match the
     list.


     When used with the ttooppoollooggyy option, a non-negated match returns a dis-
     tance based on its position on the list (the closer the match is to the
     start of the list, the shorter the distance is between it and the serv-
     er).  A negated match will be assigned the maximum distance from the
     server.  If there is no match, the address will get a distance which is
     further than any non-negated list element, and closer than any negated
     element.


     Because of the first-match aspect of the algorithm, an element that de-
     fines a subset of another element in the list should come before the
     broader element, regardless of whether either is negated.  For example,
     in
           1.2.3/24; !1.2.3.13
     the 1.2.3.13 element is completely useless, because the algorithm will
     match any lookup for 1.2.3.13 to the 1.2.3/24 element.  Using
           !1.2.3.13; 1.2.3/24
     fixes that problem by having 1.2.3.13 blocked by the negation but all
     other 1.2.3.* hosts fall through.


TTHHEE LLOOGGGGIINNGG SSTTAATTEEMMEENNTT
   SSyynnttaaxx


     logging {
       [ channel _c_h_a_n_n_e_l___n_a_m_e {
         ( file _p_a_t_h___n_a_m_e
            [ versions ( _n_u_m_b_e_r | unlimited ) ]
            [ size _s_i_z_e___s_p_e_c ]
          | syslog ( kern | user | mail | daemon | auth | syslog | lpr |
                     news | uucp | cron | authpriv | ftp |
                     local0 | local1 | local2 | local3 |
                     local4 | local5 | local6 | local7 )
          | null );

         [ severity ( critical | error | warning | notice |
                      info  | debug [ _l_e_v_e_l ] | dynamic ); ]
         [ print-category _y_e_s___o_r___n_o; ]
         [ print-severity _y_e_s___o_r___n_o; ]
         [ print-time _y_e_s___o_r___n_o; ]
       }; ]

       [ category _c_a_t_e_g_o_r_y___n_a_m_e {
         _c_h_a_n_n_e_l___n_a_m_e; [ _c_h_a_n_n_e_l___n_a_m_e; ... ]
       }; ]
       ...
     };


   DDeeffiinniittiioonn aanndd UUssaaggee

     The llooggggiinngg statement configures a wide variety of logging options for
     the nameserver.  Its cchhaannnneell phrase associates output methods, format op-
     tions and severity levels with a name that can then be used with the
     ccaatteeggoorryy phrase to select how various classes of messages are logged.



     Only one llooggggiinngg statement is used to define as many channels and cate-
     gories as are wanted.  If there are multiple logging statements in a con-
     figuration, the first defined determines the logging, and warnings are
     issued for the others.  If there is no logging statement, the logging
     configuration will be:


         logging {
             category default { default_syslog; default_debug; };
             category panic { default_syslog; default_stderr; };
             category packet { default_debug; };
             category eventlib { default_debug; };
         };

     The logging configuration is established as soon as the llooggggiinngg statement
     is parsed.  If you want to redirect messages about processing of the en-
     tire configuration file, the llooggggiinngg statement must appear first.  Even
     if you do not redirect configuration file parsing messages, we recommend
     always putting the llooggggiinngg statement first so that this rule need not be
     consciously recalled if you ever do need want the parser's messages relo-
     cated.


   TThhee cchhaannnneell pphhrraassee

     All log output goes to one or more ``channels''; you can make as many of
     them as you want.


     Every channel definition must include a clause that says whether messages
     selected for the channel go to a file, to a particular syslog facility,
     or are discarded.  It can optionally also limit the message severity lev-
     el that will be accepted by the channel (default is info), and whether to
     include a time stamp generated by nnaammeedd, the category name, or severity
     level.  The default is not to include any of those three.


     The word null as the destination option for the channel will cause all
     messages sent to it to be discarded; other options for the channel are
     meaningless.


     The ffiillee clause can include limitations both on how large the file is al-
     lowed to become, and how many versions of the file will be saved each
     time the file is opened.


     The ssiizzee option for files is simply a hard ceiling on log growth.  If the
     file ever exceeds the size, then nnaammeedd will just not write anything more
     to it until the file is reopened; exceeding the size does not automati-
     cally trigger a reopen.  The default behavior is to not limit the size of
     the file.


     If you use the vveerrssiioonn logfile option, then nnaammeedd will retain that many
     backup versions of the file by renaming them when opening.  For example,
     if you choose to keep 3 old versions of the file lamers.log then just be-
     fore it is opened lamers.log.1 is renamed to lames.log.2, lamers.log.0 is
     renamed to lamers.log.1, and lamers.log is renamed to lamers.log.0.  No
     rolled versions are kept by default; any existing log file is simply ap-
     pended.  The unlimited keyword is synonymous with 99 in current BIND re-
     leases.  Example usage of size and versions options:


         channel an_example_level {
             file "lamers.log" versions 3 size 20m;
             print-time yes;
             print-category yes;
         };


     The argument for the ssyysslloogg clause is a syslog facility as described in
     the syslog(3) manual page.  How ssyyssllooggdd will handle messages sent to this
     facility is described in the syslog.conf(5) manual page.  If you have a
     system which uses a very old version of syslog that only uses two argu-
     ments to the ooppeennlloogg(())() function, then this clause is silently ignored.


     The sseevveerriittyy clause works like syslog's ``priorities'', except that they
     can also be used if you are writing straight to a file rather than using
     syslog.  Messages  which are not at least of the severity level given
     will not be selected for the channel; messages of higher severity levels
     will be accepted.


     If you are using syslog, then the _s_y_s_l_o_g_._c_o_n_f priorities will also deter-
     mine what eventually passes through.  For example, defining a channel fa-
     cility and severity as daemon and debug but only logging daemon.warning
     via _s_y_s_l_o_g_._c_o_n_f will cause messages of severity info and notice to be
     dropped.  If the situation were reversed, with nnaammeedd writing messages of
     only warning or higher, then ssyyssllooggdd would print all messages it received
     from the channel.


     The server can supply extensive debugging information when it is in de-
     bugging mode.  If the server's global debug level is greater than zero,
     then debugging mode will be active.  The global debug level is set either
     by starting the nnaammeedd server with the --dd flag followed by a positive in-
     teger, or by sending the running server the SIGUSR1 signal (for example,
     by using nnddcc ttrraaccee). The global debug level can be set to zero, and de-
     bugging mode turned off, by sending the server the SIGUSR2 signal (as
     with nnddcc nnoottrraaccee). All debugging messages in the server have a debug lev-
     el, and higher debug levels give more more detailed output.  Channels
     that specify a specific debug severity, e.g.


         channel specific_debug_level {
             file "foo";
             severity debug 3;
         };

     will get debugging output of level 3 or less any time the server is in
     debugging mode, regardless of the global debugging level.  Channels with
     dynamic severity use the server's global level to determine what messages
     to print.


     If pprriinntt--ttiimmee has been turned on, then the date and time will be logged.
     pprriinntt--ttiimmee may be specified for a syslog channel, but is usually point-
     less since syslog also prints the date and time.  If pprriinntt--ccaatteeggoorryy is
     requested, then the category of the message will be logged as well.  Fi-
     nally, if pprriinntt--sseevveerriittyy is on, then the severity level of the message
     will be logged.  The pprriinntt-- options may be used in any combination, and
     will always be printed in the following order: time, category, severity.
     Here is an example where all three pprriinntt-- options are on:


         28-Apr-1997 15:05:32.863 default: notice: Ready to answer queries.


     There are four predefined channels that are used for nnaammeedd ''ss default
     logging as follows.  How they are used used is described in the next sec-
     tion, _T_h_e _c_a_t_e_g_o_r_y _p_h_r_a_s_e_.


         channel default_syslog {
             syslog daemon;       # send to syslog's daemon facility
             severity info;       # only send priority info and higher
         };

         channel default_debug {
             file "named.run";    # write to named.run in the working directory
                                  # Note: stderr is used instead of "named.run"
                                  # if the server is started with the -f option.
             severity dynamic;    # log at the server's current debug level
         };

         channel default_stderr { # writes to stderr
             file "<stderr>";     # this is illustrative only; there's currently
                                  # no way of specifying an internal file
                                  # descriptor in the configuration language.
             severity info;       # only send priority info and higher
         };

         channel null {
             null;                # toss anything sent to this channel
         };

     Once a channel is defined, it cannot be redefined.  Thus you cannot alter
     the built-in channels directly, but you can modify the default logging by
     pointing categories at channels you have defined.


   TThhee ccaatteeggoorryy pphhrraassee

     There are many categories, so you can send the logs you want to see wher-
     ever you want, without seeing logs you don't want.  If you don't specify
     a list of channels for a category, then log messages in that category
     will be sent to the default category instead.  If you don't specify a de-
     fault category, the following ``default default'' is used:


         category default { default_syslog; default_debug; };

     As an example, let's say you want to log security events to a file, but
     you also want keep the default logging behavior.  You'd specify the fol-
     lowing:


         channel my_security_channel {
             file "my_security_file";
             severity info;
         };
         category security { my_security_channel;
                             default_syslog; default_debug; };

     To discard all messages in a category, specify the null channel:


         category lame-servers { null; };
         category cname { null; };

     The following categories are available:


     ddeeffaauulltt
       The catch-all.  Many things still aren't classified into categories,
       and they all end up here.  Also, if you don't specify any channels for
       a category, the default category is used instead.  If you do not define
       the default category, the following definition is used:
             category default { default_syslog; default_debug; };


     ccoonnffiigg
       High-level configuration file processing.


     ppaarrsseerr
       Low-level configuration file processing.


     qquueerriieess
       A short log message is generated for every query the server receives.


     llaammee--sseerrvveerrss
       Messages like ``Lame server on ...''


     ssttaattiissttiiccss
       Statistics.


     ppaanniicc
       If the server has to shut itself down due to an internal problem, it
       will log the problem in this category as well as in the problem's na-
       tive category.  If you do not define the panic category, the following
       definition is used:
             category panic { default_syslog; default_stderr; };


     uuppddaattee
       Dynamic updates.


     nnccaacchhee
       Negative caching.


     xxffeerr--iinn
       Zone transfers the server is receiving.


     xxffeerr--oouutt
       Zone transfers the server is sending.


     ddbb
       All database operations.


     eevveennttlliibb
       Debugging info from the event system.  Only one channel may be speci-
       fied for this category, and it must be a file channel.  If you do not
       define the eventlib category, the following definition is used:
             category eventlib { default_debug; };


     ppaacckkeett
       Dumps of packets received and sent.  Only one channel may be specified
       for this category, and it must be a file channel.  If you do not define
       the packet category, the following definition is used:
             category packet { default_debug; };



     nnoottiiffyy
       The NOTIFY protocol.


     ccnnaammee
       Messages like ``... points to a CNAME''.


     sseeccuurriittyy
       Approved/unapproved requests.


     ooss
       Operating system problems.


     iinnssiisstt
       Internal consistency check failures.


     mmaaiinntteennaannccee
       Periodic maintenance events.


     llooaadd
       Zone loading messages.


     rreessppoonnssee--cchheecckkss
       Messages arising from response checking, such as ``Malformed response
       ...'', ``wrong ans. name ...'', ``unrelated additional info ...'',
       ``invalid RR type ...'', and ``bad referral ...''.



TTHHEE OOPPTTIIOONNSS SSTTAATTEEMMEENNTT
   SSyynnttaaxx


     options {
       [ version _v_e_r_s_i_o_n___s_t_r_i_n_g; ]
       [ directory _p_a_t_h___n_a_m_e; ]
       [ named-xfer _p_a_t_h___n_a_m_e; ]
       [ dump-file _p_a_t_h___n_a_m_e; ]
       [ memstatistics-file _p_a_t_h___n_a_m_e; ]
       [ pid-file _p_a_t_h___n_a_m_e; ]
       [ statistics-file _p_a_t_h___n_a_m_e; ]
       [ auth-nxdomain _y_e_s___o_r___n_o; ]
       [ deallocate-on-exit _y_e_s___o_r___n_o; ]
       [ dialup _y_e_s___o_r___n_o; ]
       [ fake-iquery _y_e_s___o_r___n_o; ]
       [ fetch-glue _y_e_s___o_r___n_o; ]
       [ has-old-clients _y_e_s___o_r___n_o; ]
       [ host-statistics _y_e_s___o_r___n_o; ]
       [ host-statistics-max _n_u_m_b_e_r; ]
       [ multiple-cnames _y_e_s___o_r___n_o; ]
       [ notify _y_e_s___o_r___n_o; ]
       [ recursion _y_e_s___o_r___n_o; ]
       [ rfc2308-type1 _y_e_s___o_r___n_o; ]
       [ use-id-pool _y_e_s___o_r___n_o; ]
       [ treat-cr-as-space _y_e_s___o_r___n_o; ]
       [ also-notify _y_e_s___o_r___n_o; ]
       [ forward ( only | first ); ]
       [ forwarders { [ _i_n___a_d_d_r ; [ _i_n___a_d_d_r ; ... ] ] }; ]
       [ check-names ( master | slave | response ) ( warn | fail | ignore); ]
       [ allow-query { _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t }; ]
       [ allow-recursion { _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t }; ]
       [ allow-transfer { _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t }; ]
       [ blackhole { _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t }; ]
       [ listen-on [ port _i_p___p_o_r_t ] { _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t }; ]
       [ query-source [ address ( _i_p___a_d_d_r | * ) ]
                      [ port ( _i_p___p_o_r_t | * ) ] ; ]
       [ lame-ttl _n_u_m_b_e_r; ]
       [ max-transfer-time-in _n_u_m_b_e_r; ]
       [ max-ncache-ttl _n_u_m_b_e_r; ]
       [ min-roots _n_u_m_b_e_r; ]
       [ serial-queries _n_u_m_b_e_r; ]
       [ transfer-format ( one-answer | many-answers ); ]
       [ transfers-in  _n_u_m_b_e_r; ]
       [ transfers-out _n_u_m_b_e_r; ]
       [ transfers-per-ns _n_u_m_b_e_r; ]
       [ transfer-source _i_p___a_d_d_r; ]
       [ maintain-ixfr-base _y_e_s___o_r___n_o; ]
       [ max-ixfr-log-size _n_u_m_b_e_r; ]
       [ coresize _s_i_z_e___s_p_e_c ; ]
       [ datasize _s_i_z_e___s_p_e_c ; ]
       [ files _s_i_z_e___s_p_e_c ; ]
       [ stacksize _s_i_z_e___s_p_e_c ; ]
       [ cleaning-interval _n_u_m_b_e_r; ]
       [ heartbeat-interval _n_u_m_b_e_r; ]
       [ interface-interval _n_u_m_b_e_r; ]
       [ statistics-interval _n_u_m_b_e_r; ]
       [ topology { _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t }; ]
       [ sortlist { _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t_|_f_R _}_; _]
       _[ _r_r_s_e_t_-_o_r_d_e_r _{ _o_r_d_e_r___s_p_e_c ; [ _o_r_d_e_r___s_p_e_c ; ... [ [ };
     };


   DDeeffiinniittiioonn aanndd UUssaaggee

     The options statement sets up global options to be used by BIND. This
     statement may appear at only once in a configuration file; if more than
     one occurrence is found, the first occurrence determines the actual op-
     tions used, and a warning will be generated.  If there is no options
     statement, an options block with each option set to its default will be
     used.


   PPaatthhnnaammeess



     vveerrssiioonn
       The version the server should report via the ndc command or via a query
       of name _v_e_r_s_i_o_n_._b_i_n_d in class chaos. The default is the real version
       number of ths server, but some server operators prefer the string (
       ssuurreellyy yyoouu mmuusstt bbee jjookkiinngg ).


     ddiirreeccttoorryy
       The working directory of the server.  Any non-absolute pathnames in the
       configuration file will be taken as relative to this directory.  The
       default location for most server output files (e.g.  _n_a_m_e_d_._r_u_n) is this
       directory.  If a directory is not specified, the working directory de-
       faults to ., the directory from which the server was started.  The di-
       rectory specified should be an absolute path.


     nnaammeedd--xxffeerr
       The pathname to the named-xfer program that the server uses for inbound
       zone transfers.  If not specified, the default is system dependent
       (e.g.  _/_u_s_r_/_s_b_i_n_/_n_a_m_e_d_-_x_f_e_r ).


     dduummpp--ffiillee
       The pathname of the file the server dumps the database to when it re-
       ceives SIGINT signal (as sent by nnddcc dduummppddbb ). If not specified, the
       default is _n_a_m_e_d___d_u_m_p_._d_b.


     mmeemmssttaattiissttiiccss--ffiillee
       The pathname of the file the server writes memory usage statistics to
       on exit, if ddeeaallllooccaattee--oonn--eexxiitt is yes. If not specified, the default is
       _n_a_m_e_d_._m_e_m_s_t_a_t_s.


     ppiidd--ffiillee
       The pathname of the file the server writes its process ID in.  If not
       specified, the default is operating system dependent, but is usually
       _/_v_a_r_/_r_u_n_/_n_a_m_e_d_._p_i_d or _/_e_t_c_/_n_a_m_e_d_._p_i_d. The pid-file is used by programs
       like nnddcc that want to send signals to the running nameserver.


     ssttaattiissttiiccss--ffiillee
       The pathname of the file the server appends statistics to when it re-
       ceives SIGILL signal (from nnddcc ssttaattss). If not specified, the default is
       _n_a_m_e_d_._s_t_a_t_s.


   BBoooolleeaann OOppttiioonnss


     aauutthh--nnxxddoommaaiinn
       If yes, then the AA bit is always set on NXDOMAIN responses, even if
       the server is not actually authoritative.  The default is yes. Do not
       turn off aauutthh--nnxxddoommaaiinn unless you are sure you know what you are doing,
       as some older software won't like it.


     ddeeaallllooccaattee--oonn--eexxiitt
       If yes, then when the server exits it will painstakingly deallocate ev-
       ery object it allocated, and then write a memory usage report to the
       mmeemmssttaattiissttiiccss--ffiillee. The default is no, because it is faster to let the
       operating system clean up.  ddeeaallllooccaattee--oonn--eexxiitt is handy for detecting
       memory leaks.


     ddiiaalluupp
       If yes, then the server treats all zones as if they are doing zone
       transfers across a dial on demand dialup link, which can be brought up
       by traffic originating from this server.  This has different effects
       according to zone type and concentrates the zone maintenance so that it
       all happens in a short interval, once every hheeaarrttbbeeaatt--iinntteerrvvaall and
       hopefully during the one call.  It also suppresses some of the normal
       zone maintenance traffic.  The default is no. The ddiiaalluupp option may al-
       so be specified in the zzoonnee statement, in which case it overrides the
       ooppttiioonnss ddiiaalluupp statement.


       If the zone is a mmaasstteerr then the server will send out NOTIFY request to
       all the slaves.  This will trigger the zone up to date checking in the
       slave (providing it supports NOTIFY) allowing  the slave to verify the
       zone while the call us up.



       If the zone is a ssllaavvee or ssttuubb then the server will suppress the zone
       regular zone up to date queries and only perform the when the
       hheeaarrttbbeeaatt--iinntteerrvvaall expires.


     ffaakkee--iiqquueerryy
       If yes, the server will simulate the obsolete DNS query type IQUERY.
       The default is no.


     ffeettcchh--gglluuee
       If yes (the default), the server will fetch ``glue'' resource records
       it doesn't have when constructing the additional data section of a re-
       sponse.  ffeettcchh--gglluuee nnoo can be used in conjunction with rreeccuurrssiioonn nnoo to
       prevent the server's cache from growing or becoming corrupted (at the
       cost of requiring more work from the client).


     hhaass--oolldd--cclliieennttss
       Setting the option to yes, is equivalent to setting the following three
       options: aauutthh--nnxxddoommaaiinn yyeess ;;,, mmaaiinnttaaiinn--iixxffrr--bbaassee yyeess ;;,, and
       rrffcc22330088--ttyyppee11 nnoo; hhaass--oolldd--cclliieennttss with aauutthh--nnxxddoommaaiinn, mmaaiinnttaaiinn--iixxffrr--
       bbaassee, and rrffcc22330088--ttyyppee11 is order dependant.


     hhoosstt--ssttaattiissttiiccss
       If yes, then statistics are kept for every host that the the nameserver
       interacts with.  The default is no. _N_o_t_e_: turning on hhoosstt--ssttaattiissttiiccss
       can consume huge amounts of memory.


     IC host-statistics-max
       The maximum number of host records that will be kept.  When this limit
       is reached no new hosts will be added to the host statistics.  If the
       set to zero then there is no limit set.  The default value is zero.


     mmaaiinnttaaiinn--iixxffrr--bbaassee
       If yes, a IXFR database file is kept for all dynamicaly updated zones.
       This enables the server to answer IXFR queries which can speed up zone
       transfers enormously.  The default is no.


     mmuullttiippllee--ccnnaammeess
       If yes, then multiple CNAME resource records will be allowed for a do-
       main name.  The default is no. Allowing multiple CNAME records is
       against standards and is not recommended.  Multiple CNAME support is
       available because previous versions of BIND allowed multiple CNAME
       records, and these records have been used for load balancing by a num-
       ber of sites.


     nnoottiiffyy
       If yes (the default), DNS NOTIFY messages are sent when a zone the
       server is authoritative for changes.  The use of NOTIFY speeds conver-
       gence between the master and its slaves.  Slave servers that receive a
       NOTIFY message and understand it will contact the master server for the
       zone and see if they need to do a zone transfer, and if they do, they
       will initiate it immediately.  The nnoottiiffyy option may also be specified
       in the zzoonnee statement, in which case it overrides the ooppttiioonnss nnoottiiffyy
       statement.


     rreeccuurrssiioonn
       If yes, and a DNS query requests recursion, then the server will at-
       tempt to do all the work required to answer the query.  If recursion is
       not on, the server will return a referral to the client if it doesn't
       know the answer.  The default is yes. See also ffeettcchh--gglluuee above.


     rrffcc22330088--ttyyppee11
       If yes, the server will send NS records along with the SOA record for
       negative answers.  You need to set this to no if you have an old BIND
       server using you as a forwarder that does not understand negative an-
       swers which contain both SOA and NS records or you have an old version
       of sendmail.  The correct fix is to upgrade the broken server or send-
       mail.  The default is no.


     uussee--iidd--ppooooll
       If yes, the server will keep track of its own outstanding query ID's to
       avoid duplication and increase randomness.  This will result in 128KB
       more memory being consumed by the server.  The default is no.


     ttrreeaatt--ccrr--aass--ssppaaccee
       If yes, the server will treat CR characters the same way it treats a
       space or tab.  This may be necessary when loading zone files on a UNIX
       system that were generated on an NT or DOS machine.  The default is no.




   AAllssoo--NNoottiiffyy

     aallssoo--nnoottiiffyy

     Defines a global list of IP addresses that also get sent NOTIFY messages
     whenever a fresh copy of the zone is loaded. This helps to ensure that
     copies of the zones will quickly converge on ``stealth'' servers.  If an
     aallssoo--nnoottiiffyy list is given in a zzoonnee statement, it will override the
     ooppttiioonnss aallssoo--nnoottiiffyy statement. When a zzoonnee nnoottiiffyy statement is set to nnoo,
     the IP addresses in the global aallssoo--nnoottiiffyy list will not get sent NOTIFY
     messages for that zone.  The default is the empty list (no global notifi-
     cation list).


   FFoorrwwaarrddiinngg


     The forwarding facility can be used to create a large site-wide cache on
     a few servers, reducing traffic over links to external nameservers.  It
     can also be used to allow queries by servers that do not have direct ac-
     cess to the Internet, but wish to look up exterior names anyway.  For-
     warding occurs only on those queries for which the server is not authori-
     tative and does not have the answer in its cache.


     ffoorrwwaarrdd
       This option is only meaningful if the ffoorrwwaarrddeerrss list is not empty.  A
       value of first, the default, causes the server to query the forwarders
       first, and if that doesn't answer the question the server will then
       look for the answer itself.  If only is specified, the server will only
       query the forwarders.


     ffoorrwwaarrddeerrss
       Specifies the IP addresses to be used for forwarding.  The default is
       the empty list (no forwarding).



     Forwarding can also be configured on a per-zone basis, allowing for the
     global forwarding options to be overridden in a variety of ways.  You can
     set particular zones to use different forwarders, or have different
     ffoorrwwaarrdd oonnllyy//ffiirrsstt behavior, or to not forward at all.  See _T_H_E _Z_O_N_E
     _S_T_A_T_E_M_E_N_T section for more information.


     Future versions of BIND 8 will provide a more powerful forwarding system.
     The syntax described above will continue to be supported.


   NNaammee CChheecckkiinngg

     The server can check domain names based upon their expected client con-
     texts.  For example, a domain name used as a hostname can be checked for
     compliance with the RFCs defining valid hostnames.


     Three checking methods are available:


     iiggnnoorree
       No checking is done.


     wwaarrnn
       Names are checked against their expected client contexts.  Invalid
       names are logged, but processing continues normally.


     ffaaiill
       Names are checked against their expected client contexts.  Invalid
       names are logged, and the offending data is rejected.


     The server can check names three areas: master zone files, slave zone
     files, and in responses to queries the server has initiated.  If cchheecckk--
     nnaammeess rreessppoonnssee ffaaiill has been specified, and answering the client's ques-
     tion would require sending an invalid name to the client, the server will
     send a REFUSED response code to the client.


     The defaults are:


         check-names master fail;
         check-names slave warn;
         check-names response ignore;


     cchheecckk--nnaammeess may also be specified in the zzoonnee statement, in which case it
     overrides the ooppttiioonnss cchheecckk--nnaammeess statement.  When used in a zzoonnee state-
     ment, the area is not specified (because it can be deduced from the zone
     type).


   AAcccceessss CCoonnttrrooll


     Access to the server can be restricted based on the IP address of the re-
     questing system or via shared secret keys.  See _A_D_D_R_E_S_S _M_A_T_C_H _L_I_S_T_S for
     details on how to specify access criteria.


     aallllooww--qquueerryy
       Specifies which hosts are allowed to ask ordinary questions.  aallllooww--
       qquueerryy may also be specified in the zzoonnee statement, in which case it
       overrides the ooppttiioonnss aallllooww--qquueerryy statement.  If not specified, the de-
       fault is to allow queries from all hosts.


       aallllooww--rreeccuurrssiioonn
         Specifies which hosts are allowed to ask recursive questions.  If not
         specified, the default is to allow recursive queries from all hosts.


       aallllooww--ttrraannssffeerr
         Specifies which hosts are allowed to receive zone transfers from the
         server.  aallllooww--ttrraannssffeerr may also be specified in the zzoonnee statement,
         in which case it overrides the ooppttiioonnss aallllooww--ttrraannssffeerr statement.  If
         not specified, the default is to allow transfers from all hosts.


       bbllaacckkhhoollee
         Specifies a list of addresses that the server will not accept queries
         from or use to resolve a query.  Queries from these addresses will
         not be responded to.


   IInntteerrffaacceess


     The interfaces and ports that the server will answer queries from may be
     specified using the lliisstteenn--oonn option.  lliisstteenn--oonn takes an optional port,
     and an address match list.  The server will listen on all interfaces al-
     lowed by the address match list.  If a port is not specified, port 53
     will be used.


     Multiple lliisstteenn--oonn statements are allowed.  For example,


         listen-on { 5.6.7.8; };
         listen-on port 1234 { !1.2.3.4; 1.2/16; };

     will enable the nameserver on port 53 for the IP address 5.6.7.8, and on
     port 1234 of an address on the machine in net 1.2 that is not 1.2.3.4.


     If no lliisstteenn--oonn is specified, the server will listen on port 53 on all
     interfaces.


   QQuueerryy AAddddrreessss


     If the server doesn't know the answer to a question, it will query other
     nameservers.  qquueerryy--ssoouurrccee specifies the address and port used for such
     queries.  If aaddddrreessss is * or is omitted, a wildcard IP address (
     INADDR_ANY) will be used.  If _p_o_r_t is * or is omitted, a random unprivi-
     leged port will be used.  The default is
           query-source address * port *;


     Note: qquueerryy--ssoouurrccee currently applies only to UDP queries; TCP queries al-
     ways use a wildcard IP address and a random unprivileged port.


   ZZoonnee TTrraannssffeerrss




     mmaaxx--ttrraannssffeerr--ttiimmee--iinn
       Inbound zone transfers ( nnaammeedd--xxffeerr processes) running longer than this
       many minutes will be terminated.  The default is 120 minutes (2 hours).


     ttrraannssffeerr--ffoorrmmaatt
       The server supports two zone transfer methods.  one-answer uses one DNS
       message per resource record transferred.  many-answers packs as many
       resource records as possible into a message.  many-answers is more ef-
       ficient, but is only known to be understood by BIND 8.1 and patched
       versions of BIND 4.9.5.  The default is one-answer. ttrraannssffeerr--ffoorrmmaatt may
       be overridden on a per-server basis by using the sseerrvveerr statement.


     ttrraannssffeerrss--iinn
       The maximum number of inbound zone transfers that can be running con-
       currently.  The default value is 10.  Increasing ttrraannssffeerrss--iinn may speed
       up the convergence of slave zones, but it also may increase the load on
       the local system.


     ttrraannssffeerrss--oouutt
       This option will be used in the future to limit the number of concur-
       rent outbound zone transfers.  It is checked for syntax, but is other-
       wise ignored.


     ttrraannssffeerrss--ppeerr--nnss
       The maximum number of inbound zone transfers ( nnaammeedd--xxffeerr processes)
       that can be concurrently transferring from a given remote nameserver.
       The default value is 2.  Increasing ttrraannssffeerrss--ppeerr--nnss may speed up the
       convergence of slave zones, but it also may increase the load on the
       remote nameserver.  ttrraannssffeerrss--ppeerr--nnss may be overridden on a per-server
       basis by using the ttrraannssffeerrss phrase of the sseerrvveerr statement.


     ttrraannssffeerr--ssoouurrccee
       ttrraannssffeerr--ssoouurrccee determines which local address will be bound to the TCP
       connection used to fetch all zones transferred inbound by the server.
       If not set, it defaults to a system controlled value which will usually
       be the address of the interface ``closest to`` the remote end.  This
       address must appear in the remote end's aallllooww--ttrraannssffeerr option for the
       zones being transferred, if one is specified.  This statement sets the
       ttrraannssffeerr--ssoouurrccee for all zones, but can be overriden on a per-zone basis
       by includinga ttrraannssffeerr--ssoouurrccee statement within the zone block in the
       configuration file.


   RReessoouurrccee LLiimmiittss


     The server's usage of many system resources can be limited.  Some operat-
     ing systems don't support some of the limits.  On such systems, a warning
     will be issued if the unsupported limit is used.  Some operating systems
     don't support limiting resources, and on these systems a
           set resource limits on this system
     message will be logged.


     Scaled values are allowed when specifying resource limits.  For example,
     1G can be used instead of 1073741824 to specify a limit of one gigabyte.
     unlimited requests unlimited use, or the maximum available amount.
     default uses the limit that was in force when the server was started.
     See the definition of _s_i_z_e___s_p_e_c in the _D_O_C_U_M_E_N_T_A_T_I_O_N _D_E_F_I_N_I_T_I_O_N_S section
     for more details.


     ccoorreessiizzee
       The maximum size of a core dump.  The default value is default.


     ddaattaassiizzee
       The maximum amount of data memory the server may use.  The default val-
       ue is default.


     ffiilleess
       The maximum number of files the server may have open concurrently.  The
       default value is unlimited. Note that on some operating systems the
       server cannot set an unlimited value and cannot determine the maximum
       number of open files the kernel can support.  On such systems, choosing
       unlimited will cause the server to use the larger of the _r_l_i_m___m_a_x from
       ggeettrrlliimmiitt(_R_L_I_M_I_T___N_O_F_I_L_E) and the value returned by
       ssyyssccoonnff(___S_C___O_P_E_N___M_A_X).  If the actual kernel limit is larger than this
       value, use lliimmiitt ffiilleess to specify the limit explicitly.


     mmaaxx--iixxffrr--lloogg--ssiizzee
       The max-ixfr-log-size will be used in a future release of the server to
       limit the size of the transaction log kept for Incremental Zone Trans-
       fer.


     ssttaacckkssiizzee
       The maximum amount of stack memory the server may use.  The default
       value is default.


   PPeerriiooddiicc TTaasskk IInntteerrvvaallss


     cclleeaanniinngg--iinntteerrvvaall
       The server will remove expired resource records from the cache every

       cclleeaanniinngg--iinntteerrvvaall minutes.  The default is 60 minutes.  If set to 0, no
       periodic cleaning will occur.


     hheeaarrttbbeeaatt--iinntteerrvvaall
       The server will perform zone maintenance tasks for all zones marked
       ddiiaalluupp yyeess whenever this interval expires.  The default is 60 minutes.
       Reasonable values are up to 1 day (1440 minutes).  If set to 0, no zone
       maintenance for these zones will occur.


     iinntteerrffaaccee--iinntteerrvvaall
       The server will scan the network interface list every iinntteerrffaaccee--
       iinntteerrvvaall minutes.  The default is 60 minutes.  If set to 0, interface
       scanning will only occur when the configuration file is loaded.  After
       the scan, listeners will be started on any new interfaces (provided
       they are allowed by the lliisstteenn--oonn configuration).  Listeners on inter-
       faces that have gone away will be cleaned up.


     ssttaattiissttiiccss--iinntteerrvvaall
       Nameserver statistics will be logged every ssttaattiissttiiccss--iinntteerrvvaall minutes.
       The default is 60.  If set to 0, no statistics will be logged.


   TTooppoollooggyy


     All other things being equal, when the server chooses a nameserver to
     query from a list of nameservers, it prefers the one that is topological-
     ly closest to itself.  The ttooppoollooggyy statement takes an address match list
     and interprets it in a special way.  Each top-level list element is as-
     signed a distance.  Non-negated elements get a distance based on their
     position in the list, where the closer the match is to the start of the
     list, the shorter the distance is between it and the server.  A negated
     match will be assigned the maximum distance from the server.  If there is
     no match, the address will get a distance which is further than any non-
     negated list element, and closer than any negated element.  For example,


         topology {
             10/8;
             !1.2.3/24;
             { 1.2/16; 3/8; };
         };

     will prefer servers on network 10 the most, followed by hosts on network
     1.2.0.0 (netmask 255.255.0.0) and network 3, with the exception of hosts
     on network 1.2.3 (netmask 255.255.255.0), which is preferred least of
     all.


     The default topology is
           topology { localhost; localnets; };


   RReessoouurrccee RReeccoorrdd ssoorrttiinngg


     When returning multiple RRs, the nameserver will normally return them in
     RRoouunndd RRoobbiinn, i.e. after each request, the first RR is put to the end of
     the list.  As the order of RRs is not defined, this should not cause any
     problems.

     The client resolver code should re-arrange the RRs as appropriate, i.e.
     using any addresses on the local net in preference to other addresses.
     However, not all resolvers can do this, or are not correctly configured.

     When a client is using a local server, the sorting can be performed in
     the server, based on the client's address. This only requires configuring
     the nameservers, not all the clients.

     The ssoorrttlliisstt statement takes an address match list and interprets it even
     more specially than the statement does.

     Each top level statement in the sortlist must itself be an explicit ad-
     dress match list with one or two elements. The first element (which may
     be an IP address, an IP prefix, an ACL name or nested address match list)
     of each top level list is checked against the source address of the query
     until a match is found.

     Once the source address of the query has been matched, if the top level
     statement contains only one element, the actual primitive element that
     matched the source address is used to select the address in the response
     to move to the beginning of the response. If the statement is a list of
     two elements, the second element is treated like the address match list
     in a topology statement. Each top level element is assigned a distance
     and the address in the response with the minimum distance is moved to the
     beginning of the response.

     In the following example, any queries received from any of the addresses
     of the host itself will get responses preferring addresses on any of the
     locally connected networks. Next most preferred are addresses on the
     192.168.1/24 network, and after that either the 192.168.2/24 or
     192.168.3/24 network with no preference shown between these two networks.
     Queries received from a host on the 192.168.1/24 network will prefer oth-
     er addresses on that network to the 192.168.2/24 and 192.168.3/24 net-
     works. Queries received from a host on the 192.168.4/24 or the
     192.168.5/24 network will only prefer other addresses on their directly
     connected networks.


     sortlist {
                { localhost;         // IF   the local host
                  { localnets;       // THEN first fit on the
                    192.168.1/24;    //      following nets
                    { 192,168.2/24; 192.168.3/24; }; }; };
                { 192.168.1/24;      // IF   on class C 192.168.1
                  { 192.168.1/24;    // THEN use .1, or .2 or .3
                    { 192.168.2/24; 192.168.3/24; }; }; };
                { 192.168.2/24;      // IF   on class C 192.168.2
                  { 192.168.2/24;    // THEN use .2, or .1 or .3
                    { 192.168.1/24; 192.168.3/24; }; }; };
                { 192.168.3/24;      // IF   on class C 192.168.3
                  { 192.168.3/24;    // THEN use .3, or .1 or .2
                    { 192.168.1/24; 192.168.2/24; }; }; };
                { { 192.168.4/24; 192.168.5/24; }; // if .4 or .5, prefer that net
                };
     };

     The following example will give reasonable behaviour for the local host
     and hosts on directly connected networks. It is similar to the behavior
     of the address sort in BIND 4.9.x. Responses sent to queries from the lo-
     cal host will favor any of the directly connected networks. Responses
     sent to queries from any other hosts on a directly connected network will
     prefer addresses on that same network. Responses to other queries will
     not be sorted.


     sortlist {
                 { localhost; localnets; };
                 { localnets; };
     };


   RRRRsseett OOrrddeerriinngg


     When multiple records are returned in an answer it may be useful to con-
     figure the order the records are placed into the response. For example
     the records for a zone might be configured to always be returned in the
     order they are defined in the zone file. Or perhaps a random shuffle of
     the records as they are returned is wanted. The rrset-order statement
     permits configuration of the ordering made of the records in a multiple
     record response. The default, if no ordering is defined, is a cyclic or-
     dering (round robin).

     An oorrddeerr__ssppeecc is defined as follows:


       [ _c_l_a_s_s _c_l_a_s_s___n_a_m_e ][ _t_y_p_e _t_y_p_e___n_a_m_e ][ _n_a_m_e "FQDN" ] _o_r_d_e_r ordering

     If no class is specified, the default is AANNYY. If no Ictype is specified,
     the default is AANNYY. If no name is specified, the default is "*".

     The legal values for oorrddeerriinngg are:


     ffiixxeedd
          Records are returned in the order they are defined in the zone file.
     rraannddoomm
          Records are returned in some random order.
     ccyycclliicc
          Records are returned in a round-robin order.

     For example:

         rrset-order {
             class IN type A name "rc.vix.com" order random;
             order cyclic;
         };

     will cause any responses for type A records in class IN that have
     "rc.vix.com" as a suffix, to always be returned in random order. All oth-
     er records are returned in cyclic order.

     If multiple rrrrsseett--oorrddeerr statements appear, they are not combined--the
     last one applies.

     If no rrrrsseett--oorrddeerr statement is specified, a default one of:


         rrset-order { class ANY type ANY name "*" order cyclic ; };

     is used.


   TTuunniinngg


     llaammee--ttttll
       Sets the number of seconds to cache a lame server indication.  0 dis-
       ables caching.  Default is 600 (10 minutes).  Maximum value is 1800 (30
       minutes)

     mmaaxx--nnccaacchhee--ttttll
       To reduce network traffic and increase performance the server store
       negative answers.  mmaaxx--nnccaacchhee--ttttll is used to set a maximum retention
       time for these answers in the server is seconds.  The default mmaaxx--
       nnccaacchhee--ttttll is 10800 seconds (3 hours).  mmaaxx--nnccaacchhee--ttttll cannot exceed
       the maximum retention time for ordinary (positive) answers (7 days) and
       will be silently truncated to 7 days if set to a value which is greater
       that 7 days.

     mmiinn--rroooottss
       The minimum number of root servers that is required for a request for
       the root servers to be accepted.  Default is 2.


TTHHEE ZZOONNEE SSTTAATTEEMMEENNTT
   SSyynnttaaxx


     zone _d_o_m_a_i_n___n_a_m_e [ ( in | hs | hesiod | chaos ) ] {
       type master;
       file _p_a_t_h___n_a_m_e;
       [ check-names ( warn | fail | ignore ); ]
       [ allow-update { _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t }; ]
       [ allow-query { _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t }; ]
       [ allow-transfer { _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t }; ]
       [ forward ( only | first ); ]
       [ forwarders { [ _i_p___a_d_d_r ; [ _i_p___a_d_d_r ; ... ] ] }; ]
       [ dialup _y_e_s___o_r___n_o; ]
       [ notify _y_e_s___o_r___n_o; ]
       [ also-notify { _i_p___a_d_d_r; [ _i_p___a_d_d_r; ... ] };
       [ pubkey _n_u_m_b_e_r _n_u_m_b_e_r _n_u_m_b_e_r _s_t_r_i_n_g; ]
     };

     zone _d_o_m_a_i_n___n_a_m_e [ ( in | hs | hesiod | chaos ) ] {
       type ( slave | stub );
       [ file _p_a_t_h___n_a_m_e; ]
       masters [ port _i_p___p_o_r_t ] { _i_p___a_d_d_r; [ _i_p___a_d_d_r; ... ] };
       [ check-names ( warn | fail | ignore ); ]
       [ allow-update { _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t }; ]
       [ allow-query { _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t }; ]
       [ allow-transfer { _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t }; ]
       [ forward ( only | first ); ]
       [ forwarders { [ _i_p___a_d_d_r ; [ _i_p___a_d_d_r ; ... ] ] }; ]
       [ transfer-source _i_p___a_d_d_r; ]
       [ max-transfer-time-in _n_u_m_b_e_r; ]
       [ notify _y_e_s___o_r___n_o; ]
       [ also-notify { _i_p___a_d_d_r; [ _i_p___a_d_d_r; ... ] };
       [ pubkey _n_u_m_b_e_r _n_u_m_b_e_r _n_u_m_b_e_r _s_t_r_i_n_g; ]
     };

     zone _d_o_m_a_i_n___n_a_m_e [ ( in | hs | hesiod | chaos ) ] {
       type forward;
       [ forward ( only | first ); ]
       [ forwarders { [ _i_p___a_d_d_r ; [ _i_p___a_d_d_r ; ... ] ] }; ]
       [ check-names ( warn | fail | ignore ); ]
     };

     zone "." [ ( in | hs | hesiod | chaos ) ] {
       type hint;
       file _p_a_t_h___n_a_m_e;
       [ check-names ( warn | fail | ignore ); ]
     };


   DDeeffiinniittiioonn aanndd UUssaaggee

     The zzoonnee statement is used to define how information about particular DNS
     zones is managed by the server.  There are five different zone types.


     mmaasstteerr
       The server has a master copy of the data for the zone and will be able
       to provide authoritative answers for it.


     ssllaavvee
       A ssllaavvee zone is a replica of a master zone.  The mmaasstteerrss list specifies
       one or more IP addresses that the slave contacts to update its copy of
       the zone.  If a ppoorrtt is specified then checks to see if the zone is
       current and zone transfers will be done to the port given. If ffiillee is
       specified, then the replica will be written to the named file.  Use of
       the ffiillee clause is highly recommended, since it often speeds server
       startup and eliminates a needless waste of bandwidth.


     ssttuubb
       A ssttuubb zone is like a slave zone, except that it replicates only the NS
       records of a master zone instead of the entire zone.


     ffoorrwwaarrdd
       A ffoorrwwaarrdd zone is used to direct all queries in it to other servers, as
       described in _T_H_E _O_P_T_I_O_N_S _S_T_A_T_E_M_E_N_T section.  The specification of op-
       tions in such a zone will override any global options declared in the
       ooppttiioonnss statement.


       If either no ffoorrwwaarrddeerrss clause is present in the zone or an empty list
       for ffoorrwwaarrddeerrss is given, then no forwarding will be done for the zone,
       cancelling the effects of any ffoorrwwaarrddeerrss in the ooppttiioonnss statement.
       Thus if you want to use this type of zone to change only the behavior
       of the global ffoorrwwaarrdd option, and not the servers used, then you also
       need to respecify the global forwarders.


     hhiinntt
       The initial set of root nameservers is specified using a hhiinntt zone.
       When the server starts up, it uses the root hints to find a root name-
       server and get the most recent list of root nameservers.


     Note: previous releases of BIND used the term pprriimmaarryy for a master zone,
     sseeccoonnddaarryy for a slave zone, and ccaacchhee for a hint zone.


   CCllaasssseess

     The zone's name may optionally be followed by a class.  If a class is not
     specified, class iinn (for "internet"), is assumed.  This is correct for
     the vast majority of cases.


     The hheessiioodd class is for an information service from MIT's Project Athena.
     It is used to share information about various systems databases, such as
     users, groups, printers and so on.  More information can be found at
     ftp://athena-dist.mit.edu/pub/ATHENA/usenix/athena_changes.PS.  The key-
     word hhss is a synonym for hheessiioodd.


     Another MIT development was CHAOSnet, a LAN protocol created in the
     mid-1970s.  It is still sometimes seen on LISP stations and other hard-
     ware in the AI community, and zone data for it can be specified with the
     cchhaaooss class.


   OOppttiioonnss


     cchheecckk--nnaammeess
       See the subsection on _N_a_m_e _C_h_e_c_k_i_n_g in _T_H_E _O_P_T_I_O_N_S _S_T_A_T_E_M_E_N_T.


     aallllooww--qquueerryy
       See the description of aallllooww--qquueerryy in the _A_c_c_e_s_s _C_o_n_t_r_o_l subsection of
       _T_H_E _O_P_T_I_O_N_S _S_T_A_T_E_M_E_N_T.


     aallllooww--uuppddaattee
       Specifies which hosts are allowed to submit Dynamic DNS updates to the
       server.  The default is to deny updates from all hosts.


     aallllooww--ttrraannssffeerr
       See the description of aallllooww--ttrraannssffeerr in the _A_c_c_e_s_s _C_o_n_t_r_o_l subsection
       of _T_H_E _O_P_T_I_O_N_S _S_T_A_T_E_M_E_N_T.


     ttrraannssffeerr--ssoouurrccee
       ttrraannssffeerr--ssoouurrccee determines which local address will be bound to the TCP
       connection used to fetch this zone.  If not set, it defaults to a sys-
       tem controlled value which will usually be the address of the interface
       ``closest to'' the remote end.  This address must appear in the remote
       end's aallllooww--ttrraannssffeerr option for this zone if one is specified.


     mmaaxx--ttrraannssffeerr--ttiimmee--iinn
       See the description of mmaaxx--ttrraannssffeerr--ttiimmee--iinn in the _Z_o_n_e _T_r_a_n_s_f_e_r_s sub-
       section of _T_H_E _O_P_T_I_O_N_S _S_T_A_T_E_M_E_N_T.


     ddiiaalluupp
       See the description of ddiiaalluupp in the _B_o_o_l_e_a_n _O_p_t_i_o_n_s subsection of _T_H_E
       _O_P_T_I_O_N_S _S_T_A_T_E_M_E_N_T.


     nnoottiiffyy
       See the description of _n_o_t_i_f_y in the _B_o_o_l_e_a_n _O_p_t_i_o_n_s subsection of the
       _T_H_E _O_P_T_I_O_N_S _S_T_A_T_E_M_E_N_T.


     aallssoo--nnoottiiffyy
       aallssoo--nnoottiiffyy is only meaningful if nnoottiiffyy is active for this zone.  The
       set of machines that will receive a DNS NOTIFY message for this zone is
       made up of all the listed nameservers for the zone (other than the pri-
       mary master) plus any IP addresses specified with aallssoo--nnoottiiffyy. aallssoo--
       nnoottiiffyy is not meaningful for ssttuubb zones.  The default is the empty
       list.


     ffoorrwwaarrdd
       ffoorrwwaarrdd is only meaningful if the zone has a ffoorrwwaarrddeerrss list. The oonnllyy
       value causes the lookup to fail after trying the ffoorrwwaarrddeerrss and getting
       no answer, while ffiirrsstt would allow a normal lookup to be tried.


     ffoorrwwaarrddeerrss
       The ffoorrwwaarrddeerrss option in a zone is used to override the list of global
       forwarders.  If it is not specified in a zone of type ffoorrwwaarrdd, _n_o for-
       warding is done for the zone; the global options are not used.


     ppuubbkkeeyy
       The DNSSEC flags, protocol, and algorithm are specified, as well as a
       base-64 encoded string representing the key.


TTHHEE AACCLL SSTTAATTEEMMEENNTT
   SSyynnttaaxx


     acl _n_a_m_e {
       _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t
     };


   DDeeffiinniittiioonn aanndd UUssaaggee

     The aaccll statement creates a named address match list.  It gets its name
     from a primary use of address match lists:  Access Control Lists (ACLs).


     Note that an address match list's name must be defined with aaccll before it
     can be used elsewhere; no forward references are allowed.


     The following ACLs are built-in:



     aannyy
       Allows all hosts.

     nnoonnee
       Denies all hosts.

     llooccaallhhoosstt
       Allows the IP addresses of all interfaces on the system.

     llooccaallnneettss
       Allows any host on a network for which the system has an interface.


TTHHEE KKEEYY SSTTAATTEEMMEENNTT
   SSyynnttaaxx


     key _k_e_y___i_d {
       algorithm _a_l_g_o_r_i_t_h_m___i_d;
       secret _s_e_c_r_e_t___s_t_r_i_n_g;
     };


   DDeeffiinniittiioonn aanndd UUssaaggee

     The kkeeyy statement defines a key ID which can be used in a sseerrvveerr state-
     ment to associate a method of authentication with a particular name serv-
     er that is more rigorous than simple IP address matching.  A key ID must
     be created with the kkeeyy statement before it can be used in a sseerrvveerr defi-
     nition or an address match list.


     The _a_l_g_o_r_i_t_h_m___i_d is a string that specifies a security/authentication al-
     gorithm.  _s_e_c_r_e_t___s_t_r_i_n_g is the secret to be used by the algorithm, and is
     treated as a base-64 encoded string.  It should go without saying, but
     probably can't, that if you have _s_e_c_r_e_t___s_t_r_i_n_g _'_s in your _n_a_m_e_d_._c_o_n_f,
     then it should not be readable by anyone but the superuser.


TTHHEE TTRRUUSSTTEEDD--KKEEYYSS SSTTAATTEEMMEENNTT
   SSyynnttaaxx


     trusted-keys {
       [ _d_o_m_a_i_n___n_a_m_e _f_l_a_g_s _p_r_o_t_o_c_o_l _a_l_g_o_r_i_t_h_m _k_e_y; ]
     };


   DDeeffiinniittiioonn aanndd UUssaaggee

     The ttrruusstteedd--kkeeyyss statement is for use with DNSSEC-style security, origi-
     nally specified in RFC 2065.  DNSSEC is meant to provide three distinct
     services: key distribution, data origin authentication, and transaction
     and request authentication.  A complete description of DNSSEC and its use
     is beyond the scope of this document, and readers interested in more in-
     formation should start with RFC 2065 and then continue with the Internet
     Drafts available at http://www.ietf.org/ids.by.wg/dnssec.html.


     Each trusted key is associated with a domain name.  Its attributes are
     the non-negative integral _f_l_a_g_s, _p_r_o_t_o_c_o_l, and _a_l_g_o_r_i_t_h_m, as well as a
     base-64 encoded string representing the _k_e_y.



     Any number of trusted keys can be specified.


TTHHEE SSEERRVVEERR SSTTAATTEEMMEENNTT
   SSyynnttaaxx


     server _i_p___a_d_d_r {
       [ bogus _y_e_s___o_r___n_o; ]
       [ transfers _n_u_m_b_e_r; ]
       [ transfer-format ( one-answer | many-answers ); ]
       [ keys { _k_e_y___i_d [ _k_e_y___i_d ... ] }; ]
     };


   DDeeffiinniittiioonn aanndd UUssaaggee

     The server statement defines the characteristics to be associated with a
     remote name server.


     If you discover that a server is giving out bad data, marking it as bboogguuss
     will prevent further queries to it.  The default value of bboogguuss is no.
     Marking a server as bboogguuss will mark all other addresses for that server
     as bboogguuss when a match is made when looking up a server's address by name.


     The server supports two zone transfer methods.  The first, oonnee--aannsswweerr,
     uses one DNS message per resource record transferred.  mmaannyy--aannsswweerrss packs
     as many resource records as possible into a message.  mmaannyy--aannsswweerrss is
     more efficient, but is only known to be understood by BIND 8.1 and
     patched versions of BIND 4.9.5.  You can specify which method to use for
     a server with the ttrraannssffeerr--ffoorrmmaatt option.  If ttrraannssffeerr--ffoorrmmaatt is not
     specified, the ttrraannssffeerr--ffoorrmmaatt specified by the ooppttiioonnss statement will be
     used.


     The ttrraannssffeerrss will be used in a future release of the server to limit the
     number of concurrent in-bound zone transfers from the specified server.
     It is checked for syntax but is otherwise ignored.


     The kkeeyyss clause is used to identify a _k_e_y___i_d defined by the kkeeyy state-
     ment, to be used for transaction security when talking to the remote
     server.  The kkeeyy statememnt must come before the sseerrvveerr statement that
     references it.


     The kkeeyyss statement is intended for future use by the server.  It is
     checked for syntax but is otherwise ignored.


TTHHEE CCOONNTTRROOLLSS SSTTAATTEEMMEENNTT
   SSyynnttaaxx


     controls {
       [ inet _i_p___a_d_d_r
         port _i_p___p_o_r_t
         allow { _a_d_d_r_e_s_s___m_a_t_c_h___l_i_s_t; }; ]
       [ unix _p_a_t_h___n_a_m_e
         perm _n_u_m_b_e_r
         owner _n_u_m_b_e_r
         group _n_u_m_b_e_r; ]
     };


   DDeeffiinniittiioonn aanndd UUssaaggee

     The ccoonnttrroollss statement declares control channels to be used by system ad-
     ministrators to affect the operation of the local name server.  These
     control channels are used by the nnddcc utility to send commands to and re-
     trieve non-DNS results from a name server.


     A uunniixx control channel is a FIFO in the file system, and access to it is
     controlled by normal file system permissions.  It is created by nnaammeedd
     with the specified file mode bits (see chmod(1)),  user and group owner.
     Note that, unlike cchhmmoodd, the mode bits specified for ppeerrmm will normally
     have a leading 0 so the number is interpreted as octal.  Also note that
     the user and group ownership specified as oowwnneerr and ggrroouupp must be given
     as numbers, not names.  It is recommended that the permissions be re-
     stricted to administrative personnel only, or else any user on the system
     might be able to manage the local name server.


     An iinneett control channel is a TCP/IP socket accessible to the Internet,
     created at the specified _i_p___p_o_r_t on the specified _i_p___a_d_d_r. Modern tteellnneett
     clients are capable of speaking directly to these sockets, and the con-
     trol protocol is ARPAnet-style text.  It is recommended that 127.0.0.1 be
     the only _i_p___a_d_d_r used, and this only if you trust all non-privileged
     users on the local host to manage your name server.


TTHHEE IINNCCLLUUDDEE SSTTAATTEEMMEENNTT
   SSyynnttaaxx


     include _p_a_t_h___n_a_m_e;


   DDeeffiinniittiioonn aanndd UUssaaggee

     The iinncclluuddee statement inserts the specified file at the point that the
     iinncclluuddee statement is encountered.  It cannot be used within another
     statement, though, so a line such as
           acl internal_hosts { include internal_hosts.acl; };
     is not allowed.


     Use iinncclluuddee to break the configuration up into easily-managed chunks.
     For example:


     include "/etc/security/keys.bind";
     include "/etc/acls.bind";

     could be used at the top of a BIND configuration file in order to include
     any ACL or key information.


     Be careful not to type ``#include'', like you would in a C program, be-
     cause ``#'' is used to start a comment.


EEXXAAMMPPLLEESS
     The simplest configuration file that is still realistically useful is one
     which simply defines a hint zone that has a full path to the root servers
     file.

     zone "." in {
             type hint;
             file "/var/named/root.cache";
     };

     Here's a more typical real-world example.


     /*
      * A simple BIND 8 configuration
      */

     logging {
             category lame-servers { null; };
             category cname { null; };
     };

     options {
             directory "/var/named";
     };

     controls {
             inet * port 52 allow { any; };                  // a bad idea
             unix "/var/run/ndc" perm 0600 owner 0 group 0;  // the default
     };

     zone "isc.org" in {
             type master;
             file "master/isc.org";
     };

     zone "vix.com" in {
             type slave;
             file "slave/vix.com";
             masters { 10.0.0.53; };
     };

     zone "0.0.127.in-addr.arpa" in {
             type master;
             file "master/127.0.0";
     };

     zone "." in {
             type hint;
             file "root.cache";
     };


FFIILLEESS
     /etc/named.conf
       The BIND 8 nnaammeedd configuration file.


SSEEEE AALLSSOO
     named(8),  ndc(8)

4th Berkeley Distribution       January 7, 1999                             28
