# $Id: dnsproxy.conf.sample,v 1.1.1.1 2001/01/31 03:58:57 zarzycki Exp $
#
# Sample dnsproxy configuration file 'dnsproxy.conf'.
#

#
# 'listen' entry specifies the dnsproxy's listening port.
# The default is to use address 0.0.0.0 (INADDR_ANY) and port 53.
#
# syntax)
#	listen [<IP address>][:<port number>]
#
# ex)	listen 127.0.0.1	-- only accept loopback connections
#	listen :1053		-- port number can be specified
#	listen 127.0.0.1:1053	-- combination of above
#
#listen  127.0.0.1

#
# 'forward' entry specifies the name server's port to which dnsproxy
# forwards requests.  This entry MUST be specified.
#
# Normally dnsproxy uses unspecified local port number for sending
# queries to the server, but if 'bind4compat' option is specified,
# dnsproxy uses the same port number as the listening port specified
# by the 'listen' entry.
#
# syntax)
#	forward <IP address>[:<port number>] [bind4compat]
#
# ex)	forward 10.0.0.2		-- forward 10.0.0.2 port 53
#	forward 10.0.0.2:1053		-- port number can be specified
#	forward 10.0.0.2 bind4compat	-- use fixed port number.
forward	xxx.xxx.xxx.xxx

#
# 'client-tranlation' entries specify the codeset (encoding) of domain
# names in the messages sent by the clients.  If you configure mDNkit
# with '--enable-zld' option, ZLD (zero level domain) can be specified.
# In this case multiple entries are permitted as long as each entry has
# different ZLD.
#
# If ZLD is not enabled (this is the default), ZLD part is ignored.
#
# syntax)
#	client-translation <ZLD> <codeset>
#
# ex)	client-translation .xyz	UTF-5
#		-- If the domain name ends with '.xyz', the client encoding
#		   is assumed to be UTF-5.  The ZLD part (.xyz) will be removed
#		   from the domain name before converting to the server
#		   encoding.
#	client-translation . Shift_JIS
#		-- '.' denotes absence of ZLD.  If the given domain name
#		   doesn't match any of other ZLDs, this entry matches
#		   and codeset Shift_JIS is assumed.
#
#client-translation .i-dns.net UTF-5	# ZLD is .i-dns.net, codeset is UTF-5
client-translation . Shift_JIS

#
# Normally domain names in the DNS reply messages from the (real) name
# server are translated back to the client codeset determined by the
# above 'client-translation' entries.
#
# 'alternate-encoding' entry specifies the alternative codeset which
# is used instead of the client codeset when the translation to the
# client codeset fails.  This alternative codeset must be an ASCII-
# compatible encoding, such as RACE.
#
# syntax)
#	alternate-encoding <codeset>
#
alternate-encoding	RACE

#
#
# 'normalize' entry specifies the normalization.  You can specify any of
# these normalization schemes:
#	ascii-lowercase		-- ASCII uppercase letters to lowercase
#	ascii-uppercase		-- ASCII lowercase letters to uppercase
#	unicode-lowercase	-- Unicode uppercase letters to lowercase
#	unicode-uppercase	-- Unicode lowercase letters to uppercase
#	unicode-form-c		-- Unicode normalization form C
#	unicode-form-kc		-- Unicode normalization form KC
#	ja-kana-fullwidth	-- Japanese halfwidth kana letters to fullwidth
#	ja-alnum-halfwidth	-- Fullwidth alphabets, digits and minus sign
#				   to halfwidth
#	ja-compose-voiced-sound	-- Combine Japanese fullwidth kana and the
#				   following (semi) voiced sound mark
#	ja-minus-hack		-- Japanse fullwidth minus sign to '-'
#
# If more than one schemes are specified, they are applied in turn.
#
# syntax)
#	normalize <normalization scheme>...
#
# ex)	normalize unicode-form-kc unicode-lowercase
#			-- first 'unicode-form-kc', then 'unicode-lowercase'
#
normalize	unicode-lowercase unicode-form-kc

#
# 'server-translation' entry specifies the codeset (encoding) of domain
# names used by the (real) name servers.  Also ZLD can be specified if
# configured with '--enable-zld' option.
#
# syntax)
#	server-translation <ZLD> <encoding>
#
# ex)	server-translation . UTF-8	-- use UTF-8 without ZLD
#
server-translation . RACE

#
# 'log-file' entry specifies the pathname of the log file.  If it is
# not specified, default log file (/tmp/dnsproxy.log) will be used.
#
# syntax)
#	log-file <pathname>
#
log-file    /var/log/dnsproxy.log

#
# 'user-id' entry and 'group-id' entry specify the user/group ID
# in which privilege dnsproxy operates.  dnsproxy tries to switch
# to the specified user/group after initialization process is finished.
#
# syntax)
#	user-id <name-or-number>
#	group-id <name-or-number>
#
# ex)	user-id	nobody		-- specify by name,
#	group-id 1000		-- or by number
#
user-id nobody
#group-id nobody

#
# 'root-directory' entry specifies the root directory of dnsproxy
# process.  dnsproxy performs chroot() to this directory after
# initialization.  Note that chroot() is allowed only for super-users.
#
# syntax)
#	root-directory <path>
#
root-directory	/var/dnsproxy

#
# 'log-level' entry specifies the logging level for dnsproxy.
# Valid levels are 'none' (no logging at all, not recommended),
# 'fatal' (only logs fatal errors), 'warn' (also logs warning messages)
# and 'trace' (also includes trace messages).  The default level is 'warn'.
# 'trace' level is useful for debugging dnsproxy itself, but it makes
# the log file grow rather quickly.
#
# syntax)
#	log-level <level>
#
log-level warn

#
# 'mdn-log-level' entry specifies the logging level for libmdn, the
# library responsible for most of the MDN processing for dnsproxy.
# Unless you are debugging mDNkit, you should keep this entry unspecified.
#
# syntax)
#	mdn-log-level <number>
#
# mdn-log-level 1
